import { convertAudioBufferToWav, convertToAudioBuffer, convertWavToMp3ByFFmpeg } from "@/src/AudioUtil";
import ProgressBar from "@/src/component/ProgressBar";
import Timer from "@/src/component/Timer";
import styles from "@/styles/Home.module.css";
import Head from "next/head";
import { useEffect, useRef, useState } from "react";

export default function Home() {
  const [file, setFile] = useState<File | null>(null);
  const [convertedFile, setConvertedFile] = useState<string | null>(null);
  const [progress, setProgress] = useState<number | undefined>(0);
  const AudioConverterWorkerRef = useRef<Worker | null>();

  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    if (!event.target.files?.[0]) {
      return;
    }
    if (event.target.files[0].type.includes("wav")) {
      setFile(event.target.files[0]);
      return;
    } else {
      alert("This is not a wav file.");
    }
  };

  const clickConvertBtnWithWorker = async () => {
    if (!file || !AudioConverterWorkerRef.current) {
      return;
    }
    initConvertFile();
    const audioBuffer = await convertToAudioBuffer(file);
    const wavFile = await convertAudioBufferToWav(audioBuffer);
    AudioConverterWorkerRef.current.postMessage({
      type: "audioBufferToMp3",
      wavFile: wavFile,
    });
  };

  const clickConvertBtnWithoutWorker = async () => {
    if (!file) {
      return;
    }
    initConvertFile();
    const audioBuffer = await convertToAudioBuffer(file);
    const wavFile = await convertAudioBufferToWav(audioBuffer);
    const mp3Blob = await convertWavToMp3ByFFmpeg(wavFile, setProgress);
    setConvertedFile(URL.createObjectURL(mp3Blob));
  };

  const initConvertFile = () => {
    setConvertedFile(null);
    return;
  };

  useEffect(() => {
    AudioConverterWorkerRef.current = new Worker(new URL("/src/worker/AudioConverter.worker.ts", import.meta.url));
    AudioConverterWorkerRef.current.addEventListener("message", (evt) => {
      if (evt.data.type === "convertWavToMp3Result") {
        setConvertedFile(evt.data.data);
      } else if (evt.data.type === "convertWavToMp3Progress") {
        setProgress(evt.data.data);
      }
    });
  }, []);

  return (
    <>
      <Head>
        <title>Convert Wav to Mp3</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <a href="https://github.com/gyeongseokKang/nextjs-webworker-ffmpegwasm">Go Github Repo</a>
        <input type="file" accept="audio/wav" onChange={handleFileChange} />
        <div>
          <strong>original wav file </strong>
          <p>
            {file?.name} {file?.type}
          </p>
          {file && <audio src={URL.createObjectURL(file)} controls></audio>}
        </div>

        <button disabled={file === null} onClick={clickConvertBtnWithWorker}>
          Convert with worker
        </button>
        <button disabled={file === null} onClick={clickConvertBtnWithoutWorker}>
          Convert without worker
        </button>
        <div>
          if you click <strong>Convert without worker</strong>, timer is stoped during converting process
        </div>
        <Timer />
        <ProgressBar progress={progress || 0} />
        <audio src={convertedFile || ""} controls></audio>
      </main>
    </>
  );
}
